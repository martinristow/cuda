#pragma once

int main() {
    const int n = 10;
    int arr[n] = { 5, 2, 9, 1, 5, 6, 3, 8, 7, 4 };
    int* d_arr;

    // ????????? ?? ???????? ?? GPU
    cudaMalloc((void**)&d_arr, n * sizeof(int));

    // ???????? ?? ???????? ?? CPU ?? GPU
    cudaMemcpy(d_arr, arr, n * sizeof(int), cudaMemcpyHostToDevice);

    // ?????????? ?? ???? ? ??? ?? ?????
    int block_size = 256;
    int grid_size = (n + block_size - 1) / block_size;

    // ?????????? ?? CUDA ???? ?? bubble sort
    bubbleSort << <grid_size, block_size >> > (d_arr, n);

    // ???????? ?? ???????? ?? GPU ?? CPU
    cudaMemcpy(arr, d_arr, n * sizeof(int), cudaMemcpyDeviceToHost);

    // ???????????? ?? ???????? ?? GPU
    cudaFree(d_arr);

    // ???????? ?? ??????????? ?????
    printf("Sorted Array: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
